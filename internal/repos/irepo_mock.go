// Code generated by MockGen. DO NOT EDIT.
// Source: irepo.go

// Package repos is a generated GoMock package.
package repos

import (
	models "booking-service/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepo is a mock of IRepo interface.
type MockIRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoMockRecorder
}

// MockIRepoMockRecorder is the mock recorder for MockIRepo.
type MockIRepoMockRecorder struct {
	mock *MockIRepo
}

// NewMockIRepo creates a new mock instance.
func NewMockIRepo(ctrl *gomock.Controller) *MockIRepo {
	mock := &MockIRepo{ctrl: ctrl}
	mock.recorder = &MockIRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepo) EXPECT() *MockIRepoMockRecorder {
	return m.recorder
}

// Pricing mocks base method.
func (m *MockIRepo) Pricing() IPricingRepo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pricing")
	ret0, _ := ret[0].(IPricingRepo)
	return ret0
}

// Pricing indicates an expected call of Pricing.
func (mr *MockIRepoMockRecorder) Pricing() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pricing", reflect.TypeOf((*MockIRepo)(nil).Pricing))
}

// MockIPricingRepo is a mock of IPricingRepo interface.
type MockIPricingRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIPricingRepoMockRecorder
}

// MockIPricingRepoMockRecorder is the mock recorder for MockIPricingRepo.
type MockIPricingRepoMockRecorder struct {
	mock *MockIPricingRepo
}

// NewMockIPricingRepo creates a new mock instance.
func NewMockIPricingRepo(ctrl *gomock.Controller) *MockIPricingRepo {
	mock := &MockIPricingRepo{ctrl: ctrl}
	mock.recorder = &MockIPricingRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPricingRepo) EXPECT() *MockIPricingRepoMockRecorder {
	return m.recorder
}

// GetPrice mocks base method.
func (m *MockIPricingRepo) GetPrice(jobType int) (*models.Price, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrice", jobType)
	ret0, _ := ret[0].(*models.Price)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrice indicates an expected call of GetPrice.
func (mr *MockIPricingRepoMockRecorder) GetPrice(jobType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrice", reflect.TypeOf((*MockIPricingRepo)(nil).GetPrice), jobType)
}
